version: "3"
services:
  store:
    container_name: store
    build:
      context: .
      args:
        BRANCH: ${BRANCH}
        REPOSITORY: ${REPOSITORY}
      dockerfile: Dockerfile
    environment:
      - DATASOURCE_URL=${DATASOURCE_URL}
      - DATASOURCE_USER=${DATASOURCE_USER}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - JWT_TOKEN_KEY=${JWT_TOKEN_KEY}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - CLOUDINARY_PRODUCT_IMAGES_FOLDER_NAME=${CLOUDINARY_PRODUCT_IMAGES_FOLDER_NAME}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
    ports:
      - "8085:8085"
    networks:
      - onlinestore
    restart: on-failure
    depends_on:
      - database
  database:
    container_name: database_onlinestore
    image: postgres:14-alpine
    build:
      context: ./database-image
      dockerfile: "Dockerfile"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - onlinestore
networks:
    onlinestore:

